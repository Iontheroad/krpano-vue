<krpano version="1.19" title="Virtual Tour Peak">

	<!-- 这是引入了krpano默认的一个皮肤模板，而下面的skin_settings对此进行了一些配置，参数非常多 -->
	<include url="skin/vtourskin.xml" />

	<!-- 引入loading动画 -->
	<!-- <include url="skin/loading/loadinganimation.xml" /> -->
	<!-- 进度数字 -->
	<!-- <include url="skin/loading/loadingpercenttext.xml" /> -->
	<!-- 进度条 -->
	<!-- <include url="skin/loading/loadingbar.xml" /> -->


	<!-- customize skin settings: maps, gyro, webvr, thumbnails, tooltips, layout, design, ... -->
	<!--自定义皮肤设置:地图，陀螺仪，webvr，缩略图，工具提示，布局，设计 -->
	<skin_settings
		maps="true"
		maps_type="google"
		maps_bing_api_key=""
		maps_google_api_key=""
		maps_zoombuttons="false"
		gyro="true"
		webvr="true"
		webvr_gyro_keeplookingdirection="false"
		webvr_prev_next_hotspots="true"
		littleplanetintro="true"
		title="true"
		thumbs="true"
		thumbs_width="120"
		thumbs_height="80"
		thumbs_padding="10"
		thumbs_crop="0|40|240|160"
		thumbs_opened="false"
		thumbs_text="false"
		thumbs_dragging="true"
		thumbs_onhoverscrolling="false"
		thumbs_scrollbuttons="false"
		thumbs_scrollindicator="false"
		thumbs_loop="false"
		tooltips_buttons="false"
		tooltips_thumbs="false"
		tooltips_hotspots="false"
		tooltips_mapspots="false"
		deeplinking="false"
		loadscene_flags="MERGE"
		loadscene_blend="OPENBLEND(0.5, 0.0, 0.75, 0.05, linear)"
		loadscene_blend_prev="SLIDEBLEND(0.5, 180, 0.75, linear)"
		loadscene_blend_next="SLIDEBLEND(0.5,   0, 0.75, linear)"
		loadingtext=""
		layout_width="100%"
		layout_maxwidth="814"
		controlbar_width="-24"
		controlbar_height="40"
		controlbar_offset="20"
		controlbar_offset_closed="-40"
		controlbar_overlap.no-fractionalscaling="10"
		controlbar_overlap.fractionalscaling="0"
		design_skin_images="vtourskin.png"
		design_bgcolor="0x2D3E50"
		design_bgalpha="0.8"
		design_bgborder="0"
		design_bgroundedge="1"
		design_bgshadow="0 4 10 0x000000 0.3"
		design_thumbborder_bgborder="3 0xFFFFFF 1.0" design_thumbborder_padding="2"
		design_thumbborder_bgroundedge="0"
		design_text_css="color:#FFFFFF; font-family:Arial;"
		design_text_shadow="1" />



	<!--
	    For an alternative skin design either change the <skin_settings> values
	    from above or optionally include one of the predefined designs from below.
	-->
	<!-- 对于另一种皮肤设计，可以更改<skin_settings>值,从上面或可选地包括一个预定义的设计从下面 -->
	<!-- <include url="skin/vtourskin_design_flat_light.xml" /> -->
	<!-- <include url="skin/vtourskin_design_glass.xml" /> -->
	<!-- <include url="skin/vtourskin_design_ultra_light.xml" /> -->
	<!-- <include url="skin/vtourskin_design_117.xml" /> -->
	<!-- <include url="skin/vtourskin_design_117round.xml" /> -->
	<!-- <include url="skin/vtourskin_design_black.xml" /> -->


	<!-- startup action - load the first scene -->
	<!-- 表示启动时自动加载第一个场景。 -->
	<!-- autorun表自动运行，onstart代表在xml加载开始的时候运行整个action -->
	<action name="startup" autorun="onstart">
		<!-- 首先检查 startscene 是否为 null 或者对应的场景不存在。 -->
		if(startscene === null OR !scene[get(startscene)],
			<!-- 如果是，则将 startscene 的值设置为第一个场景的名称 -->
			copy(startscene,scene[0].name);
			<!-- 这样可以确保 startscene 有一个有效的场景名称。 -->
		);

		<!-- 使用 loadscene 函数加载场景。 -->
		<!-- get(startscene) 获取 startscene 的值作为要加载的场景名称 -->
		<!-- null 表示不指定初始视角，MERGE 表示将新场景的设置与当前场景进行合并。 -->
		loadscene(get(startscene), null, MERGE);
		if(startactions !==null, startactions() );
		<!-- 这里假设 startactions 是一个函数，用于执行额外的启动动作，可以根据需要进行自定义。 -->
	</action>


  <!-- 热点拖动函数 -->
	<action name="draghotspot">
	<!-- 使用 spheretoscreen 函数将场景中的球面坐标 (ath, atv) 转换为屏幕坐标，并指定热点的中心位置为 (hotspotcenterx, hotspotcentery)。通过计算 mouse.stagex 是否小于 stagewidth/2，决定使用 'l'（左侧）还是 'r'（右侧）作为屏幕位置参数。这样可以确定拖拽热点时的位置参考点。 -->
		spheretoscreen(ath, atv, hotspotcenterx, hotspotcentery, calc(mouse.stagex LT stagewidth/2 ? 'l': 'r'));

		<!-- 计算鼠标在舞台上的位置 (mouse.stagex, mouse.stagey) 与热点中心位置 (hotspotcenterx, hotspotcentery) 的差值，得到拖拽热点时的调整量。 -->
		sub(drag_adjustx, mouse.stagex, hotspotcenterx);
		sub(drag_adjusty, mouse.stagey, hotspotcentery);

		<!-- 创建一个异步循环，当鼠标按下时才会执行循环内的操作。 -->
		asyncloop(pressed,
			<!-- 计算鼠标当前位置与热点中心位置的差值，得到拖拽的偏移量。 -->
			sub(dx, mouse.stagex, drag_adjustx);
			sub(dy, mouse.stagey, drag_adjusty);
			<!-- screentosphere 函数将屏幕坐标 (dx, dy) 转换为球面坐标 (ath, atv)，从而实现拖拽热点时的交互效果。 -->
			screentosphere(dx, dy, ath, atv);
			<!-- 在控制台或日志中打印热点的位置信息。这里假设 print_hotspot_pos() 是一个自定义函数，用于输出热点位置的相关信息，可以根据需要进行修改。 -->
			print_hotspot_pos();
		);
	</action>
	<!-- 计算拖动热点的位置 -->
	<action name="print_hotspot_pos">
			<!-- 将球面坐标 ath 和 atv 的值分别复制给 print_ath 和 print_atv。这是为了避免直接修改原始数据。 -->
			<!-- 对 print_ath 和 print_atv 进行舍入，保留三位小数。这是为了使输出的位置信息更加清晰和可读。 -->
			<!-- 使用 calc 函数将生成的 HTML 代码赋值给名为 "hotspot_pos_info" 的插件的 html 属性。生成的 HTML 代码中包含了热点的名称（name）以及舍入后的球面坐标信息（print_ath 和 print_atv）。 -->
		<![CDATA[
			copy(print_ath, ath);
			copy(print_atv, atv);
			roundval(print_ath, 3);
			roundval(print_atv, 3);
			calc(plugin[hotspot_pos_info].html,'&lt;hotspot name="' + name + '"[br]ath="' + print_ath + '"[br]atv="' + print_atv + '"[br]&gt;');
		]]>
	</action>


  <!-- line热点+显示标题 peak_type=1 -->
	<style
		name="peak_hotspotstyle_tooltip"
		url="skin/hotspot/line.png"
		scale="0.5"
		edge="center"
		oy="-20"
		distorted="false"
		onloaded="add_hotspot_tooltip();"
	/>
	<!-- line热点+显示标题和头像 peak_type=2 -->
	<style
		name="peak_hotspotstyle_tooltip_head"
		url="skin/hotspot/line.png"
		scale="0.5"
		edge="center"
		oy="-20"
		distorted="false"
		onloaded="add_hotspot_tooltip();add_hotspot_head();"
	/>

	<!-- portal动画热点+显示标题 peak_type=3 -->
	<style
		name="peak_hotspotstyle_animation_tooltip"
		url="skin/hotspot/portal.png"
		scale="0.5"
		edge="center"
		oy="-20"
		distorted="false"
		onloaded="do_crop_animation(100,100,15);add_hotspot_tooltip();"
	/>




	<!-- 当样式加载完成后执行 add_hotspot_tooltip 方法 -->
	<!-- 添加热点的tooltip -->
  <action name="add_hotspot_tooltip"  args="hotspotName,mytooltip">
		<!-- 使用热点的名称来构造一个新的变量"tooltipname"，它的值是以"peak_hotspot_tooltip_"为前缀加上热点名称。 -->
    txtadd(tooltipname, 'peak_hotspot_tooltip_', get(name));
		<!-- 调用"addplugin"函数，并将"tooltipname"作为参数，以创建一个新的插件。 -->
    addplugin(get(tooltipname));
		<!-- 将新插件的父元素设置为热点本身，以将工具提示与热点关联起来。 -->
		txtadd(plugin[get(tooltipname)].parent, 'hotspot[',get(name),']');
		<!-- 设置新插件的URL属性为"%SWFPATH%/plugins/textfield.swf"，指定了工具提示内容的显示方式为文本字段。 -->
    set(plugin[get(tooltipname)].url,'%SWFPATH%/plugins/textfield.swf');

		<!-- 设置新插件的X和Y坐标为0，即将工具提示显示在热点的正上方 -->
    set(plugin[get(tooltipname)].x,0);
		set(plugin[get(tooltipname)].y,0);
    <!-- 设置新插件的宽度为200像素 -->
		<!-- set(plugin[get(tooltipname)].width,200); -->
		set(plugin[get(tooltipname)].autowidth,true);
		<!-- 设置新插件的自动高度为true，使其根据内容自动调整高度 -->
		set(plugin[get(tooltipname)].autoheight,true);
		<!-- 设置新插件的背景为false，表示没有背景颜色或背景图像 -->
    set(plugin[get(tooltipname)].background,false);
		<!-- 设置新插件的边框为false，表示没有边框 -->
		set(plugin[get(tooltipname)].border,false);

		<!-- 设置新插件的CSS样式，包括文本的对齐方式、颜色、字体和字号等 -->
		<!-- text == '' OR text === null, -->
		if(hotspot[get(name)].peak_head,
			<!-- 热点的head属性存在且不为空时执行 -->
			set(plugin[get(tooltipname)].css,'text-align:center; color:#FFFFFF; font-family:Arial;  font-size:12px;background-color:rgba(0,0,0,.6);padding:5px 8px 5px 28px;border-radius:17px;  transform:translate(0px,-28px)');
			,
			<!-- 热点的head属性不存在或者为空时执行 -->
			set(plugin[get(tooltipname)].css,'text-align:center; color:#FFFFFF; font-family:Arial;  font-size:12px;background-color:rgba(0,0,0,.6);padding:5px 8px;border-radius:8px');
			<!-- 设置新插件的对齐方式为顶部（top）-->
			set(plugin[get(tooltipname)].align,top);
			<!-- 设置新插件的边缘方式为底部（bottom）-->
			set(plugin[get(tooltipname)].edge,bottom);
		);

		<!-- 设置新插件的文本阴影效果，包括阴影的偏移量、范围和角度 -->
    set(plugin[get(tooltipname)].textshadow,1);
		set(plugin[get(tooltipname)].textshadowrange,6.0);
		set(plugin[get(tooltipname)].textshadowangle,90);
		<!-- 将热点的工具提示内容复制到新插件的HTML属性中 -->
    copy(plugin[get(tooltipname)].html,hotspot[get(name)].peak_tooltip);
		<!-- 禁用新插件，使工具提示一开始不可见 -->
    set(plugin[get(tooltipname)].enabled,false);
  </action>


	<!-- 添加热点的头像 -->
  <action name="add_hotspot_head" >
		<!-- 使用热点的名称来构造一个新的变量"tooltipname"，它的值是以"peak_hotspot_head_"为前缀加上热点名称。 -->
    txtadd(tooltipname, 'peak_hotspot_head_', get(name));
		<!-- 调用"addplugin"函数，并将"tooltipname"作为参数，以创建一个新的插件。 -->
    addplugin(get(tooltipname));
		<!-- 将新插件的父元素设置为热点本身，以将工具提示与热点关联起来。 -->
		txtadd(plugin[get(tooltipname)].parent, 'hotspot[', get(name),']');
		<!-- 设置新插件的URL属性为"%SWFPATH%/plugins/textfield.swf"，指定了工具提示内容的显示方式为文本字段。 -->
    set(plugin[get(tooltipname)].url,'%SWFPATH%/plugins/textfield.swf');
		<!-- 设置新插件的对齐方式为顶部（top） -->
    set(plugin[get(tooltipname)].align,top);
		<!-- 设置新插件的边缘方式为底部（bottom） -->
		set(plugin[get(tooltipname)].edge,bottom);
		<!-- 设置新插件的X和Y坐标为0，即将工具提示显示在热点的正上方 -->
    set(plugin[get(tooltipname)].x,0);
		set(plugin[get(tooltipname)].y,2);
    <!-- 设置新插件的宽度为200像素 -->
		<!-- set(plugin[get(tooltipname)].width,32); -->
		set(plugin[get(tooltipname)].autowidth,true);
		<!-- 设置新插件的自动高度为true，使其根据内容自动调整高度 -->
		<!-- set(plugin[get(tooltipname)].height,32); -->
		set(plugin[get(tooltipname)].autoheight,true);
		<!-- 设置新插件的背景为false，表示没有背景颜色或背景图像 -->
    set(plugin[get(tooltipname)].background,false);
		<!-- 设置新插件的边框为false，表示没有边框 -->
		set(plugin[get(tooltipname)].border,false);
		<!-- set(plugin[get(tooltipname)].cssclass,'round-image'); -->

		<!-- 获取热点head属性的值设置给 创建的bgurl变量 -->
		set(bgurl, get(hotspot[ get(name)].peak_head));
		<!-- 设置改插件的内容,也就是图片 -->
    <!-- set(plugin[get(tooltipname)].url, get(bgurl)); -->

		<!-- 设置新插件的CSS样式，包括文本的对齐方式、颜色、字体和字号等 -->
		txtadd(mycss,'width:32px;height:32px;background-color:#ffffff;border-radius:50%;background-image:url(', get(bgurl) ,');background-size:100% 100%;margin:0px;cursor:default;');
    set(plugin[get(tooltipname)].css, get(mycss));

		<!-- 禁用新插件，使工具提示一开始不可见 -->
    <!-- set(plugin[get(tooltipname)].enabled,false); -->
  </action>

	<!--
		do_crop_animation(framewidth, frameheight, framerate)
		Do_crop_animation(帧宽，帧高，帧率)
		- animation by changing the image cropping 动画通过改变图像裁剪
		- parameters:
		  - framewidth - 从一帧开始的宽度，以像素为单位
		  - frameheight - 从一帧开始的高度，以像素为单位
		  - framerate - 动画帧率以“帧/秒”为单位
		- 图像可以是垂直或水平(或两者兼而有之)图像条/精灵表
		- 动作将从左到右、从上到下自动循环遍历所有帧
	-->
	<!-- 动画热点 -->
	<action name="do_crop_animation" scope="local" args="framewidth, frameheight, framerate">
		<!-- define local variables -->
		<!-- 定义局部变量 -->
		calc(local.xframes, (caller.imagewidth /framewidth) BOR 0);
		calc(local.frames, xframes * ((caller.imageheight / frameheight) BOR 0));
		def(local.frame, integer, 0);

		<!-- set the first frame -->
		calc(caller.crop, '0|0|' + framewidth + '|' + frameheight);

		<!-- do the animation -->
		setinterval(calc('crop_anim_' + caller.name), calc(1.0 / framerate),
			if(caller.loaded,
				inc(frame);
				if(frame GE frames, if(caller.onlastframe !== null, callwith(caller, onlastframe() ) ); set(frame,0); );
				mod(xpos, frame, xframes);
				div(ypos, frame, xframes);
				Math.floor(ypos);
				mul(xpos, framewidth);
				mul(ypos, frameheight);
				calc(caller.crop, xpos + '|' + ypos + '|' + framewidth + '|' + frameheight);
			  ,
				<!-- stop the interval when the hotspot gets removed -->
				clearinterval(calc('crop_anim_' + caller.name));
			);
		);
	</action>



	<action name="qweqwe_aa"  >
		js(myGetXML(%1));
	</action>
	<action name="qweqwe_bb" scope="local" args="myb">
		js(console.log("接收到了",get(myb)))
	</action>

	<!-- 切换视图方法 -->
	<action name="peak_click_to_scene" scope="local" args="peak_to_scene, blend, hotspot_name">
		<!-- 判断热点名有没有传递 -->
		if(get(hotspot_name),
			looktohotspot(get(hotspot_name),65);,
		);
		loadscene(get(peak_to_scene), null, MERGE, get(blend));
	</action>




	<!-- 创建一个新的热点作为其他热点的text (暂时未用到) -->
	<action name="add_all_the_time_tooltip_text">
		<!-- 这一行将变量'tooltipname'设置为字符串'tooltip_'加上变量'name'的值。它用于创建一个唯一的标识符来标识工具提示。 -->
    txtadd(tooltipname, 'tooltip_', get(name));
		<!-- 这一行将使用上述唯一标识符创建一个新的热点（hotspot） -->
    addhotspot(get(tooltipname));
		<!-- 这一行设置热点的URL属性，指定了要在热点中加载的SWF文件的路径 -->
    set(hotspot[get(tooltipname)].url,'%SWFPATH%/plugins/textfield.swf');
		<!-- 这一行设置热点的对齐方式为顶部对齐 -->
    set(hotspot[get(tooltipname)].align,top);
		<!-- 这一行设置热点的边缘位置为底部 -->
    set(hotspot[get(tooltipname)].edge,bottom);

		<!-- 这一行检查设备是否是移动设备，如果是，则设置热点的缩放比例为0.5。 -->
    if(device.mobile,
    	set(hotspot[get(tooltipname)].scale,0.5);
    );

		<!-- 这一行将热点的垂直位置设置为与名为'name'的热点相同 -->
    set(hotspot[get(tooltipname)].atv,get(hotspot[get(name)].atv));
		<!-- 这一行将热点的水平位置设置为与名为'name'的热点相同 -->
    set(hotspot[get(tooltipname)].ath,get(hotspot[get(name)].ath));

		<!-- 这一行设置热点的宽度自适应 -->
    set(hotspot[get(tooltipname)].autowidth,true);
		<!-- 这一行设置热点的高度自适应 -->
    set(hotspot[get(tooltipname)].autoheight,true);
		<!-- 这一行设置热点在垂直方向上居中 -->
    set(hotspot[get(tooltipname)].vcenter,true);
		<!-- 这一行设置热点的背景可见 -->
    set(hotspot[get(tooltipname)].background,true);
		<!-- 这一行设置热点背景的边缘大小为10 -->
    set(hotspot[get(tooltipname)].bgroundedge,10);
		<!-- 这一行设置热点背景的颜色为十六进制值0xccc -->
    set(hotspot[get(tooltipname)].backgroundcolor,0xccc);
		<!-- 这一行设置热点背景的边缘为圆角，圆角半径为5 -->
    set(hotspot[get(tooltipname)].roundedge,5);
		<!-- 这一行设置热点背景的透明度为1 -->
    set(hotspot[get(tooltipname)].backgroundalpha,1);
		<!-- 这一行设置热点内容与背景之间的边距为5 -->
    set(hotspot[get(tooltipname)].padding,5);
		<!-- 这一行设置热点没有边框 -->
    set(hotspot[get(tooltipname)].border,false);
		<!-- 这一行设置热点没有发光效果 -->
    set(hotspot[get(tooltipname)].glow,0);
		<!-- 这一行设置热点的层级顺序为99999，使其位于其他元素之上 -->
    set(hotspot[get(tooltipname)].zorder,99999);
		<!-- 这一行设置热点发光效果的颜色为白色 -->
    set(hotspot[get(tooltipname)].glowcolor,0xFFFFFF);

		<!-- 这一行根据设备类型设置热点的CSS样式，包括文本居中对齐、白色字体颜色、28像素的字体大小和黑色的文本阴影 -->
    if(device.mobile,
    	set(hotspot[get(tooltipname)].css,'text-align:center; color:#FFFFFF;   font-size:28px;    text-shadow: 1px 1px 1px #000;');,
    	set(hotspot[get(tooltipname)].css,'text-align:center; color:#FFFFFF;   font-size:28px;    text-shadow: 1px 1px 1px #000;');
    );
		<!-- 这一行设置热点文本没有阴影 -->
    set(hotspot[get(tooltipname)].textshadow,0);
		<!-- 这一行设置热点文本阴影的模糊范围为6.0 -->
    set(hotspot[get(tooltipname)].textshadowrange,6.0);
		<!-- 这一行设置热点文本阴影的角度为90度 -->
    set(hotspot[get(tooltipname)].textshadowangle,90);

		<!-- 这一行检查变量'text'是否为空或null。如果是，则将热点的HTML内容设置为与名为'linkscene'的场景标题相同，否则设置为变量'text'的值 -->
    if(text == '' OR text === null,
			copy(hotspot[get(tooltipname)].html,scene[get(linkscene)].title),
			copy(hotspot[get(tooltipname)].html,text)
    );
		<!-- 这一行禁用热点，使其不可交互 -->
    set(hotspot[get(tooltipname)].enabled,false);

		<!-- 这一行检查名为'name'的热点的类型是否为1。如果是，根据名为'name'的热点的类型是否为1，以及设备类型是否为移动设备，设置热点的垂直偏移量 -->
		if(hotspot[get(name)].typeid == '1',
			if(device.mobile,
				<!-- 如果热点的类型是1且设备是移动设备，将热点的垂直偏移量设置为100 -->
				set(hotspot[get(tooltipname)].oy,100);,
				<!-- 如果热点的类型是1但设备不是移动设备，同样将热点的垂直偏移量设置为100 -->
				set(hotspot[get(tooltipname)].oy,100);
			);,
			if(device.mobile,
				<!-- 如果热点的类型是1但设备不是移动设备，同样将热点的垂直偏移量设置为100 -->
				set(hotspot[get(tooltipname)].oy,100);,
				<!-- 如果热点的类型不是1且设备不是移动设备，同样将热点的垂直偏移量设置为100 -->
				set(hotspot[get(tooltipname)].oy,100);
			);
    );
  </action>


	<!-- 音频事件  -->
	<action name="peak_audio">
	js(console.log(%1));
		if(%1,
			playsound(bgsnd, 'https://krpano.com/panos/xmas/ding_dong_merrily_on_high.mp3|https://krpano.com/panos/xmas/ding_dong_merrily_on_high.ogg', 0);,
			<!-- 停止 -->
			<!-- stopsound(bgsnd); -->
			<!-- 暂停 -->
			pausesound(bgsnd);
		)
		
	</action>



	<!-- 场景 -->
	<!-- 存储场景代码块，被 loadscene 的场景代码块将被解析 -->
	<scene name="scene_1" title="篮球场"
		id="1" havevrimage="true" thumburl="panos/10017.tiles/thumb.jpg"  lat="" lng="" heading="" >


		<!-- 初始观看角度 -->
			<!-- hlookat="268.1" -->
		<view
			hlookat="0"
			vlookat="0.0"
			fovtype="MFOV"
			fov="120"
			fovmin="70"
			fovmax="140"
			maxpixelzoom="2.0"
			limitview="auto"
		/>
		<!-- <view hlookat="0.0" vlookat="0.0" fovtype="MFOV" fov="140" maxpixelzoom="2.0" fovmin="70" fovmax="140" limitview="auto" /> -->

		<!-- 预览图设置 -->
		<!--  preview就是进入场景的时候需要先展示那个图片,preview.jpg是自动生成的 -->
		<preview url="panos/10017.tiles/preview.jpg" />
		<!-- // image就是加载所有的场景图,至于里面的Cube是什么可以在文档中搜索查看 -->
		<!-- 全景图设置 -->
		<image prealign="0|268.1|0">
			<cube url="panos/10017.tiles/pano_%s.jpg" />
		</image>

		<!-- 加载声音插件 -->
			<!-- <plugin name="soundinterface"
	        url="plugins/soundinterface.js"
	        rootpath=""
	        preload="true"
	        keep="true"
	        /> -->
			<!-- 加载声音插件 -->
		<plugin name="soundinterface"
	        url.flash="%SWFPATH%/plugins/soundinterface.swf"
	        url.html5="%SWFPATH%/plugins/soundinterface.js"
	        rootpath=""
	        preload="true"
	        keep="true"
		/>
		<!-- 开始播放音乐 -->
		<!-- <events name="currentpano"
						onloadcomplete="playsound(bgsnd, 'https://krpano.com/panos/xmas/ding_dong_merrily_on_high.mp3|https://krpano.com/panos/xmas/ding_dong_merrily_on_high.ogg',, 0);"
						onremovepano="stopsound(bgsnd);"
		/> -->

		<!-- 加入一个按钮，控制音乐播放暂停 -->
			<!-- <layer name="snd" url="skin/tools/soundonoff.png" align="leftbottom" x="10" y="10" alpha="0.25" scale="0.5" onover="tween(alpha,1);" onout="tween(alpha,0.25);"
	       crop="0|0|50|50"
	       onclick="pausesoundtoggle(bgsnd); switch(crop, 0|0|50|50, 0|50|50|50);"
	  /> -->



		<!-- <hotspot
			name="peak_hotspot_1"
			style="peak_hotspotstyle_animation_tooltip"
			ath="-136"
			atv="11"
			peak_tooltip="我是动态箭头1跳转的热点"
		/>

		<hotspot
			name="peak_hotspot_2"
			style="peak_hotspotstyle_animation_tooltip"
			url="skin/hotspot/circle.png"
			ath="-124"
			atv="-10"
			peak_tooltip="我是动态圆圈跳转的热点"
		/> -->


		<!-- 纵向动画热点 -->
		<!-- <hotspot
			name="spot5"
			url="skin/hotspot/target.png"
			ath="-139"
			atv="9"
			scale="0.5"
			zoom="true"
			onloaded="do_crop_animation(128,128, 60);"
			onclick="looktohotspot(get(name),100);"
		/> -->



		<!-- <hotspot
			name="peak_hotspot_3"
			ath="-91"
			atv="9"
			scale="0.5"
			edge="center"
			oy="-20"
			url="skin/hotspot/line.png"
			peak_tooltip="我是一个普通的热点标识(有头像)"
			peak_head="https://resource.v123.cn/v/Data/upload/live/auth/656/image/5c38805344125.jpg"
			onloaded="add_hotspot_tooltip();add_hotspot_head();"
		/> -->
			<!-- style="peak_hotspotstyle_tooltip_head" -->

		<!-- <hotspot
			name="peak_hotspot_3"
			style="peak_hotspotstyle_tooltip_head"
			ath="-91"
			atv="9"
			peak_tooltip="我是一个普通的热点标识(有头像)"
			peak_head="https://resource.v123.cn/v/Data/upload/live/auth/656/image/5c38805344125.jpg"
		/> -->

 		<!-- <hotspot name="peak_hotspot_4" style="peak_hotspotstyle_tooltip" ath="-74" atv="20" peak_tooltip="您好啊!"/> -->



		<!-- <hotspot
			name="area2"
			ath="-91"
			atv="25"
			text="我是一个可以拖拽的的marker"
			url="skin/vtourskin_mapspot.png"
			ondown="draghotspot();"
		/> -->


		<!-- 可拖拽热点 -->
		<!-- <hotspot
			name="spot1546933175342"
			ath="0"
			atv="0"
			linkedscene="scene_2"
			style="skin_hotspotstyle"
			ondown="draghotspot();"
		/>
		<plugin name="hotspot_pos_info"
			type="text"
			html="drag the hotspots..."
			css="font-family:Courier;font-size: 16px;"
			padding="8"
			align="lefttop" x="10" y="10"
			width="300"
			height="100"
			enabled="true"
		/> -->
	</scene>

	<scene name="scene_2"
		id="2"
		title="神秘大楼" onstart="qweqwe_aa(我是场景2);" thumburl="panos/10034.tiles/thumb.jpg"
		lat="34.71205833" lng="113.51638611" heading="294.2" >

		<view hlookat="294.2" vlookat="0.0" fovtype="MFOV" fov="120" maxpixelzoom="2.0" fovmin="70"
			fovmax="140" limitview="auto" />

		<preview url="panos/10034.tiles/preview.jpg" />

		<image prealign="0|294.2|0">
			<cube url="panos/10034.tiles/pano_%s.jpg" />
		</image>

		<!-- 可拖拽热点 -->
		<!-- <hotspot
			name="spot1546933175342"
			ath="-79.03260129263748"
			atv="11.32974335214361"
			linkedscene="scene_1"
			style="skin_hotspotstyle"
			ondown="draghotspot();"
		/>
		<plugin name="hotspot_pos_info"
			type="text"
			html="drag the hotspots..."
			css="font-family:Courier;font-size: 16px;"
			padding="8"
			align="lefttop" x="10" y="10"
			width="300"
			height="100"
			enabled="true"
		/> -->
	</scene>


</krpano>